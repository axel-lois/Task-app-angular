{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\axel9\\\\OneDrive\\\\Desktop\\\\carpeta prueba\\\\Curso angular\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport class TaskService {\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.tasks = [];\n    this.tasksUrl = 'http://localhost:3001/api/tasks/';\n  }\n\n  getTasks() {\n    return this.http.get(this.tasksUrl + this.loginService.user.id);\n  }\n\n  getOneTask(id) {\n    return this.http.get(this.tasksUrl + this.loginService.user.id + '/' + id);\n  }\n\n  updateTask(id, newTask) {\n    return this.http.patch(this.tasksUrl + this.loginService.user.id + '/' + id, newTask);\n  }\n\n  deleteTask(id) {\n    return this.http.delete(this.tasksUrl + this.loginService.user.id + '/' + id);\n  }\n\n  createTask(newTask) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.http.post(_this.tasksUrl + _this.loginService.user.id, newTask).subscribe(res => {\n        console.log(res);\n      });\n    })();\n  }\n\n}\n\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n};\n\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/axel9/OneDrive/Desktop/carpeta prueba/Curso angular/client/src/app/services/task.service.ts"],"names":["i0","i1","i2","TaskService","constructor","http","loginService","tasks","tasksUrl","getTasks","get","user","id","getOneTask","updateTask","newTask","patch","deleteTask","delete","createTask","post","subscribe","res","console","log","ɵfac","TaskService_Factory","t","ɵɵinject","HttpClient","LoginService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAC5B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,kCAAhB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAc,KAAKF,QAAL,GAAgB,KAAKF,YAAL,CAAkBK,IAAlB,CAAuBC,EAArD,CAAP;AACH;;AACDC,EAAAA,UAAU,CAACD,EAAD,EAAK;AACX,WAAO,KAAKP,IAAL,CAAUK,GAAV,CAAc,KAAKF,QAAL,GAAgB,KAAKF,YAAL,CAAkBK,IAAlB,CAAuBC,EAAvC,GAA4C,GAA5C,GAAkDA,EAAhE,CAAP;AACH;;AACDE,EAAAA,UAAU,CAACF,EAAD,EAAKG,OAAL,EAAc;AACpB,WAAO,KAAKV,IAAL,CAAUW,KAAV,CAAgB,KAAKR,QAAL,GAAgB,KAAKF,YAAL,CAAkBK,IAAlB,CAAuBC,EAAvC,GAA4C,GAA5C,GAAkDA,EAAlE,EAAsEG,OAAtE,CAAP;AACH;;AACDE,EAAAA,UAAU,CAACL,EAAD,EAAK;AACX,WAAO,KAAKP,IAAL,CAAUa,MAAV,CAAiB,KAAKV,QAAL,GAAgB,KAAKF,YAAL,CAAkBK,IAAlB,CAAuBC,EAAvC,GAA4C,GAA5C,GAAkDA,EAAnE,CAAP;AACH;;AACKO,EAAAA,UAAU,CAACJ,OAAD,EAAU;AAAA;;AAAA;AACtB,MAAA,KAAI,CAACV,IAAL,CACKe,IADL,CACU,KAAI,CAACZ,QAAL,GAAgB,KAAI,CAACF,YAAL,CAAkBK,IAAlB,CAAuBC,EADjD,EACqDG,OADrD,EAC8DM,SAD9D,CACwEC,GAAG,IAAI;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,OADpG;AADsB;AAGzB;;AAtBoB;;AAwBzBnB,WAAW,CAACsB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIxB,WAAV,EAAuBH,EAAE,CAAC4B,QAAH,CAAY3B,EAAE,CAAC4B,UAAf,CAAvB,EAAmD7B,EAAE,CAAC4B,QAAH,CAAY1B,EAAE,CAAC4B,YAAf,CAAnD,CAAP;AAA0F,CAA/I;;AACA3B,WAAW,CAAC4B,KAAZ,GAAoB,aAAc/B,EAAE,CAACgC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE9B,WAAT;AAAsB+B,EAAAA,OAAO,EAAE/B,WAAW,CAACsB,IAA3C;AAAiDU,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"./login.service\";\r\nexport class TaskService {\r\n    constructor(http, loginService) {\r\n        this.http = http;\r\n        this.loginService = loginService;\r\n        this.tasks = [];\r\n        this.tasksUrl = 'http://localhost:3001/api/tasks/';\r\n    }\r\n    getTasks() {\r\n        return this.http.get(this.tasksUrl + this.loginService.user.id);\r\n    }\r\n    getOneTask(id) {\r\n        return this.http.get(this.tasksUrl + this.loginService.user.id + '/' + id);\r\n    }\r\n    updateTask(id, newTask) {\r\n        return this.http.patch(this.tasksUrl + this.loginService.user.id + '/' + id, newTask);\r\n    }\r\n    deleteTask(id) {\r\n        return this.http.delete(this.tasksUrl + this.loginService.user.id + '/' + id);\r\n    }\r\n    async createTask(newTask) {\r\n        this.http\r\n            .post(this.tasksUrl + this.loginService.user.id, newTask).subscribe(res => { console.log(res); });\r\n    }\r\n}\r\nTaskService.ɵfac = function TaskService_Factory(t) { return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService)); };\r\nTaskService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TaskService, factory: TaskService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}